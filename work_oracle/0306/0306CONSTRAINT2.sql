--학생, 과목 , 점수 테이블 

SELECT * FROM STUDENT2;
SELECT * FROM SUBJECT2;
SELECT * FROM SCORE2;

INSERT INTO STUDENT2 VALUES ('A0001','AA');
--INSERT INTO STUDENT2 VALUES ('B','BB');
INSERT INTO SUBJECT2 VALUES ('100','A1');
INSERT INTO SCORE2 VALUES ('A0001',100,100,'A');

DROP TABLE STUDENT2;
DROP TABLE SUBJECT2;
DROP TABLE SCORE2;

ROLLBACK;
COMMIT;

DELETE FROM SCORE2;
DELETE FROM STUDENT2;
DELETE FROM SUBJECT2;

CREATE TABLE STUDENT2
(
-- 제약조건 테이블이름_컬럼이름 줄제약조건
    STU_ID CHAR(5) CONSTRAINT STUDENT2_STU_ID_PK PRIMARY KEY 
--    자바스크립,제이쿼리 체크를 못해주면 데이터 INSERT 할때 오류 발생
                   CONSTRAINT STUDENT2_STU_ID_CK CHECK(LENGTH(TRIM(' ' FROM STU_ID)) = 5),
    STU_NAME VARCHAR2(10) CONSTRAINT STUDENT2_STU_NAME_NN NOT NULL
);

CREATE TABLE SUBJECT2
(
    SUB_ID NUMBER(3) CONSTRAINT SUBJECT2_SUB_ID_PK PRIMARY KEY ,
    SUB_NAME VARCHAR2(20) CONSTRAINT SUBJECT2_SUB_NAME_NN NOT NULL
);

-- 점수만 있으면 어느 학생의 점수인지 모름-- 어느 과목의 점수인지도 모름
-- 점수테이블에 학생과 과목의 정보도 있어야 한다 (PK)
-- NOT NULL + UNIQUE => PK 
-- (EX> 학생 ID: PK A학생이 JAVA과목에 점수 100점 B학생이 JAVA 과목에 점수 100점)
-- (EX> 학생 ID: PK,과목 ID: PK->학생/과목 중복이 아님.)
CREATE TABLE SCORE2
(
    STU_ID CHAR(5) CONSTRAINT SCORE2_STU_ID_NN NOT NULL,
    SUB_ID NUMBER(3) CONSTRAINT SCORE2_SUB_ID_NN NOT NULL,
    SCORE NUMBER(3) CONSTRAINT SCORE2_SCORE_NN NOT NULL,
    GRADE CHAR(1) CONSTRAINT SCORE2_GRADE_CK CHECK(GRADE IN('A','B','C','D','E','F')),
    CONSTRAINT SCORE2_PK PRIMARY KEY (STU_ID,SUB_ID),
--    점수,학점을 입력하는데 없는 학생, 없는 과목이 올 수 없음->FK필요(좀비데이터생김)
--    CONSTRAINT SCORE2_FK1 FOREIGN KEY (STU_ID) REFERENCES STUDENT2(STU_ID),
--    CONSTRAINT SCORE2_FK2 FOREIGN KEY (SUB_ID) REFERENCES SUBJECT2(SUB_ID)
--ON DELETE CASCADE : 부모 데이터 삭제시 자식 데이터 같이 삭제
    CONSTRAINT SCORE2_FK1 FOREIGN KEY (STU_ID) REFERENCES STUDENT2(STU_ID) ON DELETE CASCADE,
    CONSTRAINT SCORE2_FK2 FOREIGN KEY (SUB_ID) REFERENCES SUBJECT2(SUB_ID) ON DELETE CASCADE
);